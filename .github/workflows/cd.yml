name: Deploy from branch

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Action Type'
        required: true
        options:
          - deploy-app
          - deploy-services
      branch:
        description: 'Source Branch'
        required: true
        options:
          - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_SECRET_KEY: ${{ secrets.APP_SECRET_KEY }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASS: ${{ secrets.DATABASE_PASS }}
    steps:
      - name: Cache Ansible
        id: cache-ansible
        uses: actions/cache@v3
        with:
          path: /etc/ansible
          key: ${{ runner.os }}-ansible

      - name: Install ansible 
        if: steps.cache-ansible.outputs.cache-hit != 'true'
        run: |
          sudo apt install -y software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        if: ${{ inputs.tag }} != 'deploy-services'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CHEMICAL_STORAGE_REGISTRY_USER }}
          password: ${{ secrets.CHEMICAL_STORAGE_REGISTRY_PASS }}

      - name: Build and push image
        if: ${{ inputs.tag }} != 'deploy-services'
        uses: docker/build-push-action@v4
        with:
          tags: ${{ secrets.CONTAINER_IMAGE }}:${{ steps.extract_branch.outputs.branch }}-latest
          pull: true
          cache-from: ${{ secrets.CONTAINER_IMAGE }}:${{ steps.extract_branch.outputs.branch }}-latest
          push: true

      - name: Add SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}

      - name: Run playbook
        run: >
          ansible-playbook 
          -i infra/inventory/chemical-storage 
          -e env=${{ steps.extract_branch.outputs.branch }} 
          -l ${{ steps.extract_branch.outputs.branch }} 
          -t ${{ inputs.tag || 'deploy-app' }} 
          -v infra/playbook.yml 

